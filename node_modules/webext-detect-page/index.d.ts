export declare function disableWebextDetectPageCache(): void;
/** Indicates whether the code is being run on http(s):// pages (it could be in a content script or regular web context) */
export declare const isWebPage: () => boolean;
/** Indicates whether the code is being run in extension contexts that have access to the chrome API */
export declare const isExtensionContext: () => boolean;
/** Indicates whether the code is being run in a content script */
export declare const isContentScript: () => boolean;
/** Indicates whether the code is being run in a background context */
export declare const isBackground: () => boolean;
/** Indicates whether the code is being run in a background page */
export declare const isBackgroundPage: () => boolean;
/** Indicates whether the code is being run in a background worker */
export declare const isBackgroundWorker: () => boolean;
/** Indicates whether the code is being run in an options page. This only works if the current page’s URL matches the one specified in the extension's `manifest.json` */
export declare const isOptionsPage: () => boolean;
/** Indicates whether the code is being run in a dev tools page. This only works if the current page’s URL matches the one specified in the extension's `manifest.json` `devtools_page` field. */
export declare const isDevToolsPage: () => boolean;
/** Loosely detect Firefox via user agent */
export declare const isFirefox: () => boolean;
/** Loosely detect Chrome via user agent (might also include Chromium and forks like Opera) */
export declare const isChrome: () => boolean;
/** Loosely detect Safari via user agent */
export declare const isSafari: () => boolean;
export declare const contextNames: {
    readonly contentScript: () => boolean;
    readonly background: () => boolean;
    readonly options: () => boolean;
    readonly devToolsPage: () => boolean;
    readonly extension: () => boolean;
    readonly web: () => boolean;
};
declare type ContextName = keyof typeof contextNames;
export declare function getContextName(): ContextName | 'unknown';
export {};
